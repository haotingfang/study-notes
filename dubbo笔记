一、Dubbo是什么？以及为什么要用？
dubbo主要是一个分布式服务治理解决方案，那么什么是服务治理？服务治理主要是针对大规模服务化以后，服务之间的路由、负载均衡、容错机制、服务降级这些问题的解决方案，而Dubbo实现的不仅仅是远程服务通信，并且还解决了服务路由、负载、降级、容错等功能。

技术架构的发展从单体到分布式，是一种顺势而为的架构演进，也是一种被逼无奈的技术变革。
和传统的单体架构相比，分布式多了一个远程服务之间的通信。服务与服务之间的调用无非就是跨进程通信而已，我们可以使用socket来实现通信，我们也可以使用nio来实现高性能通信。我们不用这些开源的RPC框架，也可以完成通信的过程。但是为什么要用现成的框架呢？原因是，如果我们自己去开发一个网络通信，需要考虑到
1.底层网络通信协议的处理
2.序列化和反序列化的处理工作
但是这些工作本身应该是通用的，应该是一个中间件服务。为整个公司提供远程通信的服务。而不应该由业务开发人员来自己去实现，所以才有了这样的rpc框架，使得我们调用远程方法时就像调用本地方法那么简单，不需要关心底层的通信逻辑。


二、Dubbo目前支持哪些协议进行服务发布，请实现将服务以Dubbo协议以及REST协议进行发布
协议包dubbo-rpc
Dubbo 支持的协议有 dubbo、hessian、http、memcacheed、redis、rest、webservice等
代码地址：

疑问：Dubbo 3.0 为啥dubbo-rpc 下面的协议少了？


三、在Dubbo中，zookeeper主要起到什么样的作用？请简单描述一下Dubbo服务注册发现的实现原理
dubbo中使用zookeeper来实现注册中心。当然在目前最新的版本中。Dubbo能够支持的注册中心有：consul、etcd、nacos、sofa、zookeeper、redis、multicast
Dubbo服务注册发现的实现原理是zk的临时节点及watcher机制（可扩展watcher机制的实现原理）